import streamlit as st
import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import binom
import io

# --- 1. Configuraci√≥n de la P√°gina ---
st.set_page_config(
    page_title="CDF Binomial",
    page_icon="üìà",
    layout="wide",
    initial_sidebar_state="expanded"
)

# --- 2. Barra Lateral con Controles ---
with st.sidebar:
    st.title("Fundamentos de Estad√≠stica")
    st.header("CAP√çTULO 5:")
    st.header("Distribuciones de Probabilidad Discretas")
    # T√≠tulo espec√≠fico para esta secci√≥n
    st.subheader("5.2.1 Funci√≥n de Distribuci√≥n Acumulada (CDF) Binomial")
    st.markdown("*Autor: Luis Corona Alcantar*")
    st.markdown("_Correo: lca1643@gmail.com_")
    st.markdown("---")
    
    st.header("1. Configurar Par√°metros")
    
    # Controles deslizantes para los par√°metros n y p (igual que antes)
    n_ensayos = st.slider(
        "N√∫mero de ensayos (n):", 
        min_value=1, 
        max_value=100, 
        value=10, 
        help="El n√∫mero total de veces que se repite el experimento."
    )
    
    prob_exito = st.slider(
        "Probabilidad de √©xito (p):", 
        min_value=0.0, 
        max_value=1.0, 
        value=0.5, 
        step=0.01,
        help="La probabilidad de que ocurra un '√©xito' en un solo ensayo."
    )

# --- 3. Panel Principal ---
st.title("üìà Funci√≥n de Distribuci√≥n Acumulada (CDF) Binomial")
st.write(
    "Esta aplicaci√≥n visualiza la **Funci√≥n de Distribuci√≥n Acumulada (CDF)** de una distribuci√≥n binomial. "
    "La CDF nos dice la probabilidad de obtener **k o menos** √©xitos."
)
st.markdown("---")

# --- 4. L√≥gica de C√°lculo y Visualizaci√≥n ---

# F√≥rmula de la CDF binomial
st.subheader("F√≥rmula de la Funci√≥n de Distribuci√≥n Acumulada")
st.latex(r"P(X \leq k) = \sum_{i=0}^{k} \binom{n}{i} p^i (1-p)^{n-i}")

# --- Secci√≥n de C√°lculo Interactivo ---
st.subheader("Calcular Probabilidad Acumulada para un Valor Espec√≠fico")

# El valor m√°ximo para k es n
k_seleccionado = st.slider(
    "Selecciona un n√∫mero de √©xitos (k) para calcular su probabilidad acumulada:", 
    min_value=0, 
    max_value=n_ensayos, 
    value=min(3, n_ensayos),
    help="La probabilidad acumulada de obtener un n√∫mero de √©xitos menor o igual a k."
)

# Calcular la probabilidad ACUMULADA para el k seleccionado
prob_acumulada_k = binom.cdf(k_seleccionado, n_ensayos, prob_exito)

st.info(f"La probabilidad de obtener **{k_seleccionado} o menos** √©xito(s) en **{n_ensayos}** ensayos es **{prob_acumulada_k:.4f}**")

# --- Visualizaci√≥n ---
st.subheader(f"Gr√°fico de la CDF: n={n_ensayos}, p={prob_exito}")

try:
    # Preparar datos para el gr√°fico
    # Necesitamos k hasta n+1 para dibujar el √∫ltimo escal√≥n
    k_values = np.arange(0, n_ensayos + 2)
    cdf_values = np.array([binom.cdf(k, n_ensayos, prob_exito) for k in k_values])

    fig, ax = plt.subplots(figsize=(12, 7))

    # DIBUJAR LA CDF COMO FUNCI√ìN ESCALONADA (L√≠neas horizontales)
    ax.hlines(y=cdf_values[:-1], xmin=k_values[:-1], xmax=k_values[1:],
              colors='blue', linestyles='solid', linewidth=2, label='CDF Binomial P(X ‚â§ k)')

    # DIBUJAR PUNTOS S√ìLIDOS en los saltos para mayor claridad
    ax.scatter(k_values[:-1], cdf_values[:-1], color='blue', zorder=5)

    # DESTACAR LA PROBABILIDAD ACUMULADA para el k seleccionado
    if k_seleccionado <= n_ensayos:
        ax.hlines(y=prob_acumulada_k, xmin=-0.5, xmax=k_seleccionado, colors='purple', linestyles='--',
                  label=f'$P(X \leq {k_seleccionado}) = {prob_acumulada_k:.4f}$')
        ax.plot([k_seleccionado, k_seleccionado], [0, prob_acumulada_k], 'purple', linestyle='--') # L√≠nea vertical

    # Estilo y etiquetas del gr√°fico
    ax.set_xlabel('N√∫mero de √âxitos (k)', fontsize=12)
    ax.set_ylabel('Probabilidad Acumulada P(X ‚â§ k)', fontsize=12)
    ax.set_title(f'Funci√≥n de Distribuci√≥n Acumulada (CDF)', fontsize=16, fontweight='bold')
    
    ax.legend(loc='lower right')
    ax.grid(True, linestyle='--', alpha=0.6, axis='y')
    ax.set_xticks(range(n_ensayos + 1)) 
    ax.set_xlim(-0.5, n_ensayos + 0.5) 
    ax.set_ylim(0, 1.05) 

    # Mostrar el gr√°fico en Streamlit
    st.pyplot(fig)

    # --- BOT√ìN DE DESCARGA ---
    buf = io.BytesIO()
    fig.savefig(buf, format="png", dpi=300, bbox_inches='tight')
    
    st.download_button(
        label="üì• Descargar Gr√°fico de la CDF",
        data=buf.getvalue(),
        file_name=f"CDF_binomial_n{n_ensayos}_p{prob_exito:.2f}.png",
        mime="image/png"
    )

    # --- Interpretaci√≥n ---
    with st.expander("Ver Interpretaci√≥n de la CDF"):
        st.markdown(f"**¬øQu√© significa este gr√°fico?**")
        st.markdown(
            "La Funci√≥n de Distribuci√≥n Acumulada (CDF) muestra la probabilidad de que la variable aleatoria X (n√∫mero de √©xitos) "
            "tome un valor **menor o igual** a un n√∫mero espec√≠fico 'k'."
        )
        st.markdown(
            "- El **eje X** representa el n√∫mero de √©xitos (k).\n"
            "- El **eje Y** representa la probabilidad acumulada `P(X ‚â§ k)`."
        )
        st.markdown(
            f"Por ejemplo, para `k = {k_seleccionado}`, el valor en el eje Y (`{prob_acumulada_k:.4f}`) es la suma de las probabilidades de obtener 0 √©xitos, 1 √©xito, ..., hasta {k_seleccionado} √©xitos."
        )
        st.markdown(
            "Observe c√≥mo la funci√≥n crece en 'escalones' hasta llegar a 1. La altura de cada escal√≥n es igual a la probabilidad de ese valor de 'k' espec√≠fico (como se ve√≠a en el gr√°fico de barras anterior)."
        )

except Exception as e:
    st.error(f"Ocurri√≥ un error al generar el gr√°fico: {e}")